{
    "openapi": "3.1.0",
    "info": {
        "title": "ModaBrasileira",
        "summary": "Routes of app",
        "description": "API under development",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Jhonattan Rocha da Silva",
            "url": "http://www.example.com/contact/",
            "email": "jhonattab246rocha@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "identifier": "MIT"
        },
        "version": "0.0.1"
    },
    "paths": {
        "/crud/categories/": {
            "post": {
                "summary": "Create Category",
                "operationId": "create_category_crud_categories__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Categories",
                "operationId": "read_categories_crud_categories__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    },
                                    "title": "Response Read Categories Crud Categories  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/categories/{category_id}": {
            "get": {
                "summary": "Read Category",
                "operationId": "read_category_crud_categories__category_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Category",
                "operationId": "update_category_crud_categories__category_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Category Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Category",
                "operationId": "delete_category_crud_categories__category_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/products": {
            "post": {
                "summary": "Create Product",
                "operationId": "create_product_crud_products_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Products",
                "operationId": "read_products_crud_products_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    },
                                    "title": "Response Read Products Crud Products Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/products/{product_id}": {
            "get": {
                "summary": "Read Product",
                "operationId": "read_product_crud_products__product_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Product Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Product",
                "operationId": "update_product_crud_products__product_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Product Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Product",
                "operationId": "delete_product_crud_products__product_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Product Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/product_categories": {
            "post": {
                "summary": "Create Product",
                "operationId": "create_product_crud_product_categories_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCategoryBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategoryCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Products",
                "operationId": "read_products_crud_product_categories_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductCategory"
                                    },
                                    "title": "Response Read Products Crud Product Categories Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/product_categories/{product_category_id}": {
            "get": {
                "summary": "Read Product",
                "operationId": "read_product_crud_product_categories__product_category_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Product Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Product",
                "operationId": "update_product_crud_product_categories__product_category_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Product Category Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCategoryCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategoryCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Product",
                "operationId": "delete_product_crud_product_categories__product_category_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Product Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/subcategories/": {
            "post": {
                "summary": "Create Subcategory",
                "operationId": "create_subcategory_crud_subcategories__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubCategoryBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubCategoryCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Subcategories",
                "operationId": "read_subcategories_crud_subcategories__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubCategory"
                                    },
                                    "title": "Response Read Subcategories Crud Subcategories  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/subcategories/{subcategory_id}": {
            "get": {
                "summary": "Read Subcategory",
                "operationId": "read_subcategory_crud_subcategories__subcategory_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subcategory_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Subcategory Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubCategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Subcategory",
                "operationId": "update_subcategory_crud_subcategories__subcategory_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subcategory_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Subcategory Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubCategoryCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubCategoryCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Subcategory",
                "operationId": "delete_subcategory_crud_subcategories__subcategory_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subcategory_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Subcategory Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/people": {
            "post": {
                "summary": "Create People",
                "operationId": "create_people_crud_people_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read People",
                "operationId": "read_people_crud_people_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    },
                                    "title": "Response Read People Crud People Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/people/{person_id}": {
            "get": {
                "summary": "Read People",
                "operationId": "read_people_crud_people__person_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "person_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Person Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update People",
                "operationId": "update_people_crud_people__person_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "person_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Person Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete People",
                "operationId": "delete_people_crud_people__person_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "person_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Person Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/companies": {
            "post": {
                "summary": "Create Company",
                "operationId": "create_company_crud_companies_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Company",
                "operationId": "read_company_crud_companies_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company"
                                    },
                                    "title": "Response Read Company Crud Companies Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/companies/{company_id}": {
            "get": {
                "summary": "Read Company",
                "operationId": "read_company_crud_companies__company_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Company Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Company",
                "operationId": "update_company_crud_companies__company_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Company Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Company",
                "operationId": "delete_company_crud_companies__company_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Company Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/dynamic_entities": {
            "post": {
                "summary": "Create Dynamic Entity",
                "operationId": "create_dynamic_entity_crud_dynamic_entities_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DynamicEntityCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicEntityCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Dynamic Entities",
                "operationId": "read_dynamic_entities_crud_dynamic_entities_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DynamicEntity"
                                    },
                                    "title": "Response Read Dynamic Entities Crud Dynamic Entities Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/dynamic_entities/{dynamic_entity_id}": {
            "get": {
                "summary": "Read Dynamic Entity",
                "operationId": "read_dynamic_entity_crud_dynamic_entities__dynamic_entity_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_entity_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Entity Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicEntity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Dynamic Entity",
                "operationId": "update_dynamic_entity_crud_dynamic_entities__dynamic_entity_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_entity_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Entity Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DynamicEntityCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicEntityCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Dynamic Entity",
                "operationId": "delete_dynamic_entity_crud_dynamic_entities__dynamic_entity_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_entity_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Entity Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/dynamic_fields": {
            "post": {
                "summary": "Create Dynamic Field",
                "operationId": "create_dynamic_field_crud_dynamic_fields_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DynamicFieldsCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicFieldsCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Dynamic Fields",
                "operationId": "read_dynamic_fields_crud_dynamic_fields_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DynamicFields"
                                    },
                                    "title": "Response Read Dynamic Fields Crud Dynamic Fields Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/dynamic_fields/{dynamic_field_id}": {
            "get": {
                "summary": "Read Dynamic Field",
                "operationId": "read_dynamic_field_crud_dynamic_fields__dynamic_field_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_field_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Field Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicFields"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Dynamic Field",
                "operationId": "update_dynamic_field_crud_dynamic_fields__dynamic_field_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_field_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Field Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DynamicFieldsCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicFieldsCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Dynamic Field",
                "operationId": "delete_dynamic_field_crud_dynamic_fields__dynamic_field_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_field_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Field Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/dynamic_fields_values": {
            "post": {
                "summary": "Create Dynamic Field Value",
                "operationId": "create_dynamic_field_value_crud_dynamic_fields_values_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DynamicFieldToEntityValueCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicFieldToEntityValueCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Dynamic Fields",
                "operationId": "read_dynamic_fields_crud_dynamic_fields_values_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DynamicFieldToEntityValue"
                                    },
                                    "title": "Response Read Dynamic Fields Crud Dynamic Fields Values Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/dynamic_fields_values/{dynamic_field_value_id}": {
            "get": {
                "summary": "Read Dynamic Field",
                "operationId": "read_dynamic_field_crud_dynamic_fields_values__dynamic_field_value_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_field_value_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Field Value Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicFieldToEntityValue"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Dynamic Field",
                "operationId": "update_dynamic_field_crud_dynamic_fields_values__dynamic_field_value_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_field_value_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Field Value Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DynamicFieldToEntityValueCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DynamicFieldToEntityValueCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Dynamic Field Value",
                "operationId": "delete_dynamic_field_value_crud_dynamic_fields_values__dynamic_field_value_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "dynamic_field_value_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Dynamic Field Value Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/generic": {
            "post": {
                "summary": "Generic Create",
                "operationId": "generic_create_crud_generic_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "title": "Model"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenericCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Generic Reads",
                "operationId": "generic_reads_crud_generic_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "title": "Model"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GenericCreate"
                                    },
                                    "title": "Response Generic Reads Crud Generic Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/generic/{generic_id}": {
            "get": {
                "summary": "Generic Read",
                "operationId": "generic_read_crud_generic__generic_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generic_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Generic Id"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "title": "Model"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Generic Update",
                "operationId": "generic_update_crud_generic__generic_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generic_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Generic Id"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Model"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenericCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Generic Delete",
                "operationId": "generic_delete_crud_generic__generic_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generic_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Generic Id"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Model"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/user/": {
            "post": {
                "summary": "Create User",
                "operationId": "create_user_crud_user__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Users",
                "operationId": "read_users_crud_user__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    },
                                    "title": "Response Read Users Crud User  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/user/{user_id}": {
            "get": {
                "summary": "Read User",
                "operationId": "read_user_crud_user__user_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update User",
                "operationId": "update_user_crud_user__user_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete User",
                "operationId": "delete_user_crud_user__user_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/user_profile/": {
            "post": {
                "summary": "Create User",
                "operationId": "create_user_crud_user_profile__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Users",
                "operationId": "read_users_crud_user_profile__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserProfile"
                                    },
                                    "title": "Response Read Users Crud User Profile  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/user_profile/{user_profile_id}": {
            "get": {
                "summary": "Read User",
                "operationId": "read_user_crud_user_profile__user_profile_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_profile_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Profile Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update User",
                "operationId": "update_user_crud_user_profile__user_profile_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_profile_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Profile Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete User",
                "operationId": "delete_user_crud_user_profile__user_profile_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_profile_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Profile Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/permissions/": {
            "post": {
                "summary": "Create Permission",
                "operationId": "create_permission_crud_permissions__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionsBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionsCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Permissions",
                "operationId": "read_permissions_crud_permissions__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permissions"
                                    },
                                    "title": "Response Read Permissions Crud Permissions  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/permissions/{permission_id}": {
            "get": {
                "summary": "Read Permission",
                "operationId": "read_permission_crud_permissions__permission_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "permission_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Permission Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Permission",
                "operationId": "update_permission_crud_permissions__permission_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "permission_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Permission Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionsCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionsCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Permission",
                "operationId": "delete_permission_crud_permissions__permission_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "permission_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Permission Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/employees": {
            "post": {
                "summary": "Create Employee",
                "operationId": "create_employee_crud_employees_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeesBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeesCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Employee",
                "operationId": "read_employee_crud_employees_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Employees"
                                    },
                                    "title": "Response Read Employee Crud Employees Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/employees/{employee_id}": {
            "get": {
                "summary": "Read Employee",
                "operationId": "read_employee_crud_employees__employee_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Employee Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employees"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Employee",
                "operationId": "update_employee_crud_employees__employee_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Employee Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeesCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeesCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Employee",
                "operationId": "delete_employee_crud_employees__employee_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Employee Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/token": {
            "post": {
                "summary": "Login",
                "operationId": "login_crud_token_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_login_crud_token_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/input_output_stock/": {
            "post": {
                "summary": "Create Category",
                "operationId": "create_category_crud_input_output_stock__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InputOutputStockBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputOutputStockCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Categories",
                "operationId": "read_categories_crud_input_output_stock__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Filters"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InputOutputStock"
                                    },
                                    "title": "Response Read Categories Crud Input Output Stock  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/input_output_stock/{input_output_stock_id}": {
            "get": {
                "summary": "Read Category",
                "operationId": "read_category_crud_input_output_stock__input_output_stock_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_output_stock_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Output Stock Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputOutputStock"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Category",
                "operationId": "update_category_crud_input_output_stock__input_output_stock_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_output_stock_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Output Stock Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InputOutputStockCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputOutputStockCreate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Category",
                "operationId": "delete_category_crud_input_output_stock__input_output_stock_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_output_stock_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Output Stock Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/files/": {
            "post": {
                "summary": "Create File",
                "operationId": "create_file_crud_files__post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "title": "Description"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_file_crud_files__post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Read Files",
                "operationId": "read_files_crud_files__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileResponse"
                                    },
                                    "title": "Response Read Files Crud Files  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/files/download/{file_id}": {
            "get": {
                "summary": "Download File",
                "operationId": "download_file_crud_files_download__file_id__get",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/crud/files/{file_id}": {
            "get": {
                "summary": "Read File",
                "operationId": "read_file_crud_files__file_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete File",
                "operationId": "delete_file_crud_files__file_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Delete File Crud Files  File Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Body_create_file_crud_files__post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_create_file_crud_files__post"
            },
            "Body_login_crud_token_post": {
                "properties": {
                    "grant_type": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "password"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grant Type"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "title": "Body_login_crud_token_post"
            },
            "Category": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "subcategories": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SubCategory"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Subcategories"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "subcategories"
                ],
                "title": "Category"
            },
            "CategoryBase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "CategoryBase"
            },
            "CategoryCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ],
                "title": "CategoryCreate"
            },
            "Company": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "social_reason": {
                        "type": "string",
                        "title": "Social Reason"
                    },
                    "cnpj": {
                        "type": "string",
                        "title": "Cnpj"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "employees": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Employees"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Employees"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "social_reason",
                    "cnpj",
                    "tel",
                    "email",
                    "address",
                    "id",
                    "employees"
                ],
                "title": "Company"
            },
            "CompanyBase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "social_reason": {
                        "type": "string",
                        "title": "Social Reason"
                    },
                    "cnpj": {
                        "type": "string",
                        "title": "Cnpj"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "social_reason",
                    "cnpj",
                    "tel",
                    "email",
                    "address"
                ],
                "title": "CompanyBase"
            },
            "CompanyCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "social_reason": {
                        "type": "string",
                        "title": "Social Reason"
                    },
                    "cnpj": {
                        "type": "string",
                        "title": "Cnpj"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "social_reason",
                    "cnpj",
                    "tel",
                    "email",
                    "address",
                    "id"
                ],
                "title": "CompanyCreate"
            },
            "DynamicEntity": {
                "properties": {
                    "entity_name": {
                        "type": "string",
                        "title": "Entity Name"
                    },
                    "is_page": {
                        "type": "boolean",
                        "title": "Is Page"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "fields": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/DynamicFields"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Fields"
                    }
                },
                "type": "object",
                "required": [
                    "entity_name",
                    "is_page",
                    "id",
                    "fields"
                ],
                "title": "DynamicEntity"
            },
            "DynamicEntityCreate": {
                "properties": {
                    "entity_name": {
                        "type": "string",
                        "title": "Entity Name"
                    },
                    "is_page": {
                        "type": "boolean",
                        "title": "Is Page"
                    }
                },
                "type": "object",
                "required": [
                    "entity_name",
                    "is_page"
                ],
                "title": "DynamicEntityCreate"
            },
            "DynamicFieldToEntityValue": {
                "properties": {
                    "entity_id": {
                        "type": "integer",
                        "title": "Entity Id"
                    },
                    "entity_id_instance": {
                        "type": "string",
                        "title": "Entity Id Instance"
                    },
                    "field_id": {
                        "type": "integer",
                        "title": "Field Id"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "field": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DynamicFields"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "entity_id",
                    "entity_id_instance",
                    "field_id",
                    "value",
                    "id",
                    "field"
                ],
                "title": "DynamicFieldToEntityValue"
            },
            "DynamicFieldToEntityValueCreate": {
                "properties": {
                    "entity_id": {
                        "type": "integer",
                        "title": "Entity Id"
                    },
                    "entity_id_instance": {
                        "type": "string",
                        "title": "Entity Id Instance"
                    },
                    "field_id": {
                        "type": "integer",
                        "title": "Field Id"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": [
                    "entity_id",
                    "entity_id_instance",
                    "field_id",
                    "value"
                ],
                "title": "DynamicFieldToEntityValueCreate"
            },
            "DynamicFields": {
                "properties": {
                    "field_name": {
                        "type": "string",
                        "title": "Field Name"
                    },
                    "type_value": {
                        "type": "string",
                        "title": "Type Value"
                    },
                    "entity_id": {
                        "type": "integer",
                        "title": "Entity Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "field_name",
                    "type_value",
                    "entity_id",
                    "id"
                ],
                "title": "DynamicFields"
            },
            "DynamicFieldsCreate": {
                "properties": {
                    "field_name": {
                        "type": "string",
                        "title": "Field Name"
                    },
                    "type_value": {
                        "type": "string",
                        "title": "Type Value"
                    },
                    "entity_id": {
                        "type": "integer",
                        "title": "Entity Id"
                    }
                },
                "type": "object",
                "required": [
                    "field_name",
                    "type_value",
                    "entity_id"
                ],
                "title": "DynamicFieldsCreate"
            },
            "Employees": {
                "properties": {
                    "id_emp": {
                        "type": "integer",
                        "title": "Id Emp"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "cpf": {
                        "type": "string",
                        "title": "Cpf"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id_emp",
                    "name",
                    "cpf",
                    "tel",
                    "email",
                    "address",
                    "id"
                ],
                "title": "Employees"
            },
            "EmployeesBase": {
                "properties": {
                    "id_emp": {
                        "type": "integer",
                        "title": "Id Emp"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "cpf": {
                        "type": "string",
                        "title": "Cpf"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    }
                },
                "type": "object",
                "required": [
                    "id_emp",
                    "name",
                    "cpf",
                    "tel",
                    "email",
                    "address"
                ],
                "title": "EmployeesBase"
            },
            "EmployeesCreate": {
                "properties": {
                    "id_emp": {
                        "type": "integer",
                        "title": "Id Emp"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "cpf": {
                        "type": "string",
                        "title": "Cpf"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "cpf",
                    "tel",
                    "email",
                    "address",
                    "id"
                ],
                "title": "EmployeesCreate"
            },
            "FileResponse": {
                "properties": {
                    "filename": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "content_type": {
                        "type": "string",
                        "title": "Content Type"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "file_path": {
                        "type": "string",
                        "title": "File Path"
                    }
                },
                "type": "object",
                "required": [
                    "filename",
                    "content_type",
                    "id",
                    "file_path"
                ],
                "title": "FileResponse"
            },
            "GenericCreate": {
                "properties": {
                    "values": {
                        "type": "object",
                        "title": "Values",
                        "default": {}
                    },
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "default": ""
                    }
                },
                "type": "object",
                "title": "GenericCreate"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "InputOutputStock": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "qtd": {
                        "type": "number",
                        "title": "Qtd"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date"
                    },
                    "product_id": {
                        "type": "integer",
                        "title": "Product Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "qtd",
                    "date",
                    "product_id",
                    "user_id",
                    "id"
                ],
                "title": "InputOutputStock"
            },
            "InputOutputStockBase": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "qtd": {
                        "type": "number",
                        "title": "Qtd"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date"
                    },
                    "product_id": {
                        "type": "integer",
                        "title": "Product Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "qtd",
                    "date",
                    "product_id",
                    "user_id"
                ],
                "title": "InputOutputStockBase"
            },
            "InputOutputStockCreate": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "qtd": {
                        "type": "number",
                        "title": "Qtd"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date"
                    },
                    "product_id": {
                        "type": "integer",
                        "title": "Product Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "qtd",
                    "date",
                    "product_id",
                    "user_id",
                    "id"
                ],
                "title": "InputOutputStockCreate"
            },
            "Permissions": {
                "properties": {
                    "entity_name": {
                        "type": "string",
                        "title": "Entity Name"
                    },
                    "can_view": {
                        "type": "boolean",
                        "title": "Can View"
                    },
                    "can_delete": {
                        "type": "boolean",
                        "title": "Can Delete"
                    },
                    "can_update": {
                        "type": "boolean",
                        "title": "Can Update"
                    },
                    "can_create": {
                        "type": "boolean",
                        "title": "Can Create"
                    },
                    "profile_id": {
                        "type": "integer",
                        "title": "Profile Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "entity_name",
                    "can_view",
                    "can_delete",
                    "can_update",
                    "can_create",
                    "profile_id",
                    "id"
                ],
                "title": "Permissions"
            },
            "PermissionsBase": {
                "properties": {
                    "entity_name": {
                        "type": "string",
                        "title": "Entity Name"
                    },
                    "can_view": {
                        "type": "boolean",
                        "title": "Can View"
                    },
                    "can_delete": {
                        "type": "boolean",
                        "title": "Can Delete"
                    },
                    "can_update": {
                        "type": "boolean",
                        "title": "Can Update"
                    },
                    "can_create": {
                        "type": "boolean",
                        "title": "Can Create"
                    },
                    "profile_id": {
                        "type": "integer",
                        "title": "Profile Id"
                    }
                },
                "type": "object",
                "required": [
                    "entity_name",
                    "can_view",
                    "can_delete",
                    "can_update",
                    "can_create",
                    "profile_id"
                ],
                "title": "PermissionsBase"
            },
            "PermissionsCreate": {
                "properties": {
                    "entity_name": {
                        "type": "string",
                        "title": "Entity Name"
                    },
                    "can_view": {
                        "type": "boolean",
                        "title": "Can View"
                    },
                    "can_delete": {
                        "type": "boolean",
                        "title": "Can Delete"
                    },
                    "can_update": {
                        "type": "boolean",
                        "title": "Can Update"
                    },
                    "can_create": {
                        "type": "boolean",
                        "title": "Can Create"
                    },
                    "profile_id": {
                        "type": "integer",
                        "title": "Profile Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "entity_name",
                    "can_view",
                    "can_delete",
                    "can_update",
                    "can_create",
                    "profile_id",
                    "id"
                ],
                "title": "PermissionsCreate"
            },
            "Person": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "cpf": {
                        "type": "string",
                        "title": "Cpf"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "cpf",
                    "tel",
                    "email",
                    "address",
                    "id"
                ],
                "title": "Person"
            },
            "PersonBase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "cpf": {
                        "type": "string",
                        "title": "Cpf"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "cpf",
                    "tel",
                    "email",
                    "address"
                ],
                "title": "PersonBase"
            },
            "PersonCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "cpf": {
                        "type": "string",
                        "title": "Cpf"
                    },
                    "tel": {
                        "type": "string",
                        "title": "Tel"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "cpf",
                    "tel",
                    "email",
                    "address",
                    "id"
                ],
                "title": "PersonCreate"
            },
            "Product": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "price": {
                        "type": "number",
                        "title": "Price"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "price",
                    "id"
                ],
                "title": "Product"
            },
            "ProductBase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "price": {
                        "type": "number",
                        "title": "Price"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "price"
                ],
                "title": "ProductBase"
            },
            "ProductCategory": {
                "properties": {
                    "id_prod": {
                        "type": "integer",
                        "title": "Id Prod"
                    },
                    "id_cat": {
                        "type": "integer",
                        "title": "Id Cat"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "product": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Product"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "category": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Category"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id_prod",
                    "id_cat",
                    "id",
                    "product",
                    "category"
                ],
                "title": "ProductCategory"
            },
            "ProductCategoryBase": {
                "properties": {
                    "id_prod": {
                        "type": "integer",
                        "title": "Id Prod"
                    },
                    "id_cat": {
                        "type": "integer",
                        "title": "Id Cat"
                    }
                },
                "type": "object",
                "required": [
                    "id_prod",
                    "id_cat"
                ],
                "title": "ProductCategoryBase"
            },
            "ProductCategoryCreate": {
                "properties": {
                    "id_prod": {
                        "type": "integer",
                        "title": "Id Prod"
                    },
                    "id_cat": {
                        "type": "integer",
                        "title": "Id Cat"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id_prod",
                    "id_cat",
                    "id"
                ],
                "title": "ProductCategoryCreate"
            },
            "ProductCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "price": {
                        "type": "number",
                        "title": "Price"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "price",
                    "id"
                ],
                "title": "ProductCreate"
            },
            "SubCategory": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id_cat": {
                        "type": "integer",
                        "title": "Id Cat"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id_cat",
                    "id"
                ],
                "title": "SubCategory"
            },
            "SubCategoryBase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id_cat": {
                        "type": "integer",
                        "title": "Id Cat"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id_cat"
                ],
                "title": "SubCategoryBase"
            },
            "SubCategoryCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id_cat": {
                        "type": "integer",
                        "title": "Id Cat"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id_cat",
                    "id"
                ],
                "title": "SubCategoryCreate"
            },
            "Token": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type"
                    },
                    "user": {
                        "type": "object",
                        "title": "User"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type",
                    "user"
                ],
                "title": "Token"
            },
            "User": {
                "properties": {
                    "lang": {
                        "type": "string",
                        "title": "Lang"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "profile_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "profile": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UserProfile"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "lang",
                    "name",
                    "email",
                    "id",
                    "profile"
                ],
                "title": "User"
            },
            "UserBase": {
                "properties": {
                    "lang": {
                        "type": "string",
                        "title": "Lang"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "password": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Password",
                        "default": ""
                    },
                    "salt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Salt",
                        "default": ""
                    },
                    "auth_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auth Token",
                        "default": ""
                    },
                    "profile_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Id"
                    }
                },
                "type": "object",
                "required": [
                    "lang",
                    "name",
                    "email"
                ],
                "title": "UserBase"
            },
            "UserCreate": {
                "properties": {
                    "lang": {
                        "type": "string",
                        "title": "Lang"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "password": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Password",
                        "default": ""
                    },
                    "salt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Salt",
                        "default": ""
                    },
                    "auth_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auth Token",
                        "default": ""
                    },
                    "profile_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profile Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "lang",
                    "name",
                    "email",
                    "id"
                ],
                "title": "UserCreate"
            },
            "UserProfile": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "permissions": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Permissions"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Permissions",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ],
                "title": "UserProfile"
            },
            "UserProfileBase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "UserProfileBase"
            },
            "UserProfileCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ],
                "title": "UserProfileCreate"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "/crud/token"
                    }
                }
            }
        }
    }
}